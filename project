import numpy as np
import pandas as pd

df = pd.read_csv('DATA-FINAL.csv')
df = df.loc[:, ['Grade', 'CA_100', 'MTT_50', 'ETT_100',
       'ETP_100', 'Course_Att', 'MHRDName']]
print(df.shape)

d = df.loc[df['MHRDName'] == 'Bachelor of technology in Electronics and Communication Engineering(Embedded)']
print(d.shape)
x = df.iloc[:, 1:6]
y = df.iloc[:, 0]
print(df.columns)

from sklearn.impute import SimpleImputer
x = SimpleImputer(missing_values = np.nan, strategy = 'mean', verbose = 0).fit_transform(x)


from sklearn.preprocessing import LabelEncoder, StandardScaler
y = LabelEncoder().fit_transform(y)
x = StandardScaler().fit_transform(x)
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.3, random_state = 0)
from sklearn.svm import SVC
svm = SVC()
svm.fit(x_train, y_train)
svm_pred = svm.predict(x_test)
from sklearn.metrics import accuracy_score, confusion_matrix
print(accuracy_score(y_test, svm_pred))
print(confusion_matrix(y_test, svm_pred))

from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier(n_neighbors = 5)
knn.fit(x_train, y_train)
y_pred = knn.predict(x_test)
print(accuracy_score(y_test, y_pred))
print(confusion_matrix(y_test, y_pred))
